# Generated by Django 2.2.24 on 2023-05-19 13:39

import ckeditor.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import framework.validators
import imagekit.models.fields
import tasks.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('type', models.CharField(choices=[('T', 'Technical'), ('N', 'Non-Technical'), ('R', 'Responsibility'), ('O', 'Other')], default='t', max_length=1)),
                ('description', models.TextField(blank=True, max_length=2000, null=True)),
                ('icon', imagekit.models.fields.ProcessedImageField(upload_to=tasks.models.Stream.get_icon_path, validators=[framework.validators.validate_file_size], verbose_name='Icon Image')),
                ('color', models.CharField(help_text='hexcode with #', max_length=10, null=True, verbose_name='Color')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.Stream', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Stream',
                'verbose_name_plural': 'Streams',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField(blank=True, max_length=2000, null=True)),
                ('points', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], default='2')),
                ('difficulty', models.CharField(choices=[('1', 'Easy'), ('2', 'Moderate'), ('3', 'Tough'), ('4', 'Hard')], default='1', max_length=1)),
                ('date', models.DateField(default=datetime.date.today)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Task', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('stream', models.ManyToManyField(blank=True, to='tasks.Stream', verbose_name='Stream')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='TaskLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('0', 'Assigned'), ('1', 'Started'), ('2', 'Submitted for Review'), ('3', 'Redo'), ('4', 'Verified')], default='1', max_length=1, verbose_name='Task Status')),
                ('proof', ckeditor.fields.RichTextField(blank=True, max_length=2000, null=True)),
                ('start_time', models.DateTimeField(default=datetime.datetime.today)),
                ('completion_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('points', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)], default='2')),
                ('assign_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_assigner', to=settings.AUTH_USER_MODEL, verbose_name='Task Assigner')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskLog', to=settings.AUTH_USER_MODEL, verbose_name='Member')),
                ('reviewers', models.ManyToManyField(blank=True, related_name='Reviewers', to=settings.AUTH_USER_MODEL, verbose_name='Task Reviewers')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Log', to='tasks.Task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Task Log',
                'verbose_name_plural': 'Task Logs',
            },
        ),
    ]
